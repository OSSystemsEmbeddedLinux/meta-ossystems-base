# Copyright (c) 2024 O.S. Systems Software LTDA.
# Usage Instructions for the Yocto CVE Filter Class

# This class is designed to filter CVEs (Common Vulnerabilities
# and Exposures) from CVE files. It should be used in conjunction
# with the cve-check class from the openembedded-core.

# Steps to Use This Class

# 1. Add the following lines to your distro configuration file:

#    include conf/distro/include/cve-extra-exclusions.inc
#    INHERIT += "cve-check"

# 2. Inherit the cve-filter class in the image recipe.
#
# --------  Configuration Variables  ----------------------------

# The cve-filter class provides several configurable variables:

# CVE_FILTER_PREVIOUS_FILE: Specifies the previous version of 
# the CVE JSON file. If no file is provided, only the current
# file will be considered.
# Default: empty

# CVE_FILTER_PREVIOUS_VERSION: Specifies the distro version of
# the previous CVE JSON file. The CVE_FILTER_PREVIOUS_FILE must
# be defined, otherwise the value 0 will be used.
# Example: "1.0.0"
# Default: "0.0.0"

# CVE_FILTER_MARKDOWN_FILE_NAME: Specifies the name of the 
# output Markdown file containing the list of detected CVEs.
# Default: "${IMAGE_NAME}.md"

# CVE_FILTER_IGNORED_CVES: Lists the CVEs that should be ignored by the filter.
# Example: "CVE-2017-6264 CVE-2023-1234"
# Default: empty

# CVE_FILTER_SCOREV2_CUTTOFF and CVE_FILTER_SCOREV3_CUTTOFF:
# Set the value of cut off CVE Score to SCOREV2 and V3. CVEs below the value
# set here will no be considered.
# Example: "9"
# Default: "0"

# Set the PATH to find the old CVE Json list
CVE_FILTER_PREVIOUS_FILE ??= ""
CVE_FILTER_PREVIOUS_VERSION ??= "0.0.0"

CVE_FILTER_CURRENT_FILE = "${IMGDEPLOYDIR}/${IMAGE_NAME}${IMAGE_NAME_SUFFIX}.json"
CVE_FILTER_CURRENT_VERSION = "${DISTRO_VERSION}"

# Set the name of markdown output file
CVE_FILTER_MARKDOWN_FILE_NAME ?= "${IMAGE_NAME}${IMAGE_NAME_SUFFIX}.md"
CVE_FILTER_MARKDOWN_FILE = "${IMGDEPLOYDIR}/${CVE_FILTER_MARKDOWN_FILE_NAME}"

# List of CVE should be ignored Eg: CVE-2023-1234
CVE_FILTER_IGNORED_CVES ??= ""

# Cut off score V2 and V3 value
CVE_FILTER_SCOREV2_CUTOFF ??= "0"
CVE_FILTER_SCOREV3_CUTOFF ??= "0"

inherit python3native

python do_cve_filter (){
    from ossystems.cve_filter import Cve

    previousFile = d.getVar("CVE_FILTER_PREVIOUS_FILE")
    previousVersion = d.getVar("CVE_FILTER_PREVIOUS_VERSION")
    cveIgnoreList = d.getVar("CVE_FILTER_IGNORED_CVES").split()
    scoreV2CutOff = int(d.getVar("CVE_FILTER_SCOREV2_CUTOFF"))
    scoreV3CutOff = int(d.getVar("CVE_FILTER_SCOREV3_CUTOFF"))

    cve_prev = Cve()
    cve_prev.setMarkdonFileName(d.getVar("CVE_FILTER_MARKDOWN_FILE"))
    cve_curr = Cve()

    if previousFile:
        cve_prev.loadCVEfile(previousFile)
        cve_prev.setCVEVersion(previousVersion)
        cve_prev.setScoreV2CutOff(scoreV2CutOff)
        cve_prev.setScoreV3CutOff(scoreV3CutOff)
        cve_prev.setIgnoreCVEList(cveIgnoreList)
        cve_prev.loadCVEData()
    else:
        bb.warn("Previous CVE File Not Defined!!!")

    cve_curr.loadCVEfile(d.getVar("CVE_FILTER_CURRENT_FILE"))
    cve_curr.setCVEVersion(d.getVar("CVE_FILTER_CURRENT_VERSION"))
    cve_curr.setScoreV2CutOff(scoreV2CutOff)
    cve_curr.setScoreV3CutOff(scoreV3CutOff)
    cve_curr.setIgnoreCVEList(cveIgnoreList)
    cve_curr.loadCVEData()
    cve_prev.compareCVes(cve_curr)
    bb.plain("DONE!!")
}

addtask cve_filter after do_rootfs before do_image

ROOTFS_POSTPROCESS_COMMAND:prepend = "link_cvefilter_markdownfile; "

link_cvefilter_markdownfile () {
    ln -sf ${CVE_FILTER_MARKDOWN_FILE_NAME} ${IMGDEPLOYDIR}/${IMAGE_LINK_NAME}.md
}
