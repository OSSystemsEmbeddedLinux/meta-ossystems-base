DISTRO_VERSION = "13.0+snapshot-${DATE}"
MAINTAINER = "O.S. Systems Software LTDA. <contato@ossystems.com.br>"
TARGET_VENDOR = "-oel"
SDK_VENDOR = "-oelsdk"
SDK_VERSION := "${@'${DISTRO_VERSION}'.replace('snapshot-${DATE}','snapshot')}"
SDKPATH = "/opt/${DISTRO}/${SDK_VERSION}"

# Target i686 for the sdk binaries, rather than the build arch.
#
# Other options: i586, x86_64
SDKMACHINE ?= "i686"

# Paths
OELDIR ?= "${COREBASE}/.."
DEPLOY_DIR_IMAGE = "${DEPLOY_DIR}/images/${PACKAGE_ARCH}"

require conf/distro/include/oel-providers.conf

INHERIT_DISTRO ?= "debian devshell sstate license deploy-license-manifest"

# Use an isolated shared state directory. The user specified SSTATE_DIR will
# still be used, and updated, but the actual SSTATE_DIR used by bitbake will
# be under TMPDIR. This ensures that we can identify what shared state
# archives were used by this build, and means mel-release will only archive
# those shared state archives, not the entire shared SSTATE_DIR, if one
# exists.
INHERIT += "isolated-sstate-dir"

# Move the persist db up out of TMPDIR so it survives its removal
PERSISTENT_DIR = "${TOPDIR}/db"

# Do an up front type check to sanity check user configuration
INHERIT += "typecheck"

# Restore any available saved headrevs
DUMP_HEADREVS_DB ?= '${OELDIR}/${MACHINE}/saved_persist_data.db'
INHERIT += "restore-dumped-headrevs"

# Lower the priority of meta-oe, as we prefer oe-core when recipes are duped
BBFILE_PRIORITY_openembedded-layer = "1"

# locales shouldn't be in lib32/lib64
localedir = "${exec_prefix}/lib/locale"

# Ensure that we implement shared state reuse handling for non-target recipes
require conf/distro/include/sstate.inc

# A problem we have is that while the info page for ld says that sysv is the
# default in RHEL5, it is actually not and it defaults to gnu hash.  This
# in turn results in binaries that won't run on older systems.  We change to
# forcing both hash types to be included to fix this issue.
BUILD_LDFLAGS += "-Wl,--hash-style=both"

# Quadruple the normal. 'du' is not a good way to really see how much
# space will be needed and fails badly as the fs size grows.
IMAGE_ROOTFS_EXTRA_SPACE = "40960"

# Add nls if we're supporting.
DISTRO_FEATURES_append = " ${@['','nls'][bb.data.getVar('USE_NLS', d, 1) == 'yes']}"

# Sane default locales for images
GLIBC_GENERATE_LOCALES ?= "en_US en_US.UTF-8"
IMAGE_LINGUAS ?= "en-us"

# Targets for qemu
QEMU_TARGETS += "mips64 mips64el sh4"

# Use a local PR server by default
PRSERV_HOST ?= "localhost:0"

# We want information about image contents
INHERIT += "buildhistory"
BUILDHISTORY_DIR ?= "${TOPDIR}/buildhistory"
BUILDHISTORY_COMMIT ?= "1"

# More sane usability for the archiver classes
ARCHIVER_MODE ?= "none"
ARCHIVER_MODE[type] = "choice"
ARCHIVER_MODE[choices] = "none original patched configured"
ARCHIVER_CLASS = "${@'archive-${ARCHIVER_MODE}-source' \
                     if ARCHIVER_MODE != 'none' else ''}"
INHERIT += "${ARCHIVER_CLASS}"

# Ensure we have license-filtered sources available
COPYLEFT_LICENSE_INCLUDE = '*'
COPYLEFT_LICENSE_EXCLUDE = 'CLOSED Proprietary* Freescale EULA INTEL NetLogic'
COPYLEFT_RECIPE_TYPES ?= '${COPYLEFT_AVAILABLE_RECIPE_TYPES}'
INHERIT += "copyleft_compliance"

# Ensure we have what we need for the below type checks
OE_IMPORTS += "oe.terminal"

# Additional distros we test on
SANITY_TESTED_DISTROS += "\
    Ubuntu 10.04.1 LTS \n \
    CentOS release 5.4 (Final) \n \
    CentOS release 5.5 (Final) \n \
    CentOS release 5.8 (Final) \n \
"

# Disable reliance upon upstream URIs, as we want our customers to be able to
# build without network connectivity
CONNECTIVITY_CHECK_URIS = ""
